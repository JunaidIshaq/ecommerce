spring:
  application:
    name: inventory-service

  datasource:
    url: ${POSTGRES_URI:jdbc:postgresql://postgres:5432/inventory_db}
    username: postgres
    password: postgres
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect

  data:
    redis:
      host: ${REDIS_HOST:redis}
      port: ${REDIS_PORT:6379}
      timeout: 6000
      connect-timeout: 6000
  cache:
    type: redis

  elasticsearch:
    uris: ${ELASTIC_URI:http://elasticsearch:9200}

  jackson:
    serialization:
      write-dates-as-timestamps: false

server:
  port: ${SERVER_PORT:8091}

  forward-headers-strategy: framework

jwt:
  secret: ${JWT_SECRET:supersecretkeythatshouldbereplacedandstoredsecurely}

logging:
  level:
    root: INFO
    org.springframework.data.redis: WARN
    org.springframework.cache.interceptor: DEBUG


elastic:
  host:
    name: elasticsearch

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    tags:
      application: inventory-service

category:
  service:
    url: ${CATEGORY_SERVICE_URL:http://localhost:8090/api/v1/category}

product:
  service:
    url: ${PRODUCT_SERVICE_URL:http://localhost:8080/api/v1/project}
