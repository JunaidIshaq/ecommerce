name: Build and Deploy Product Service

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # üß© Step 1: Checkout the latest code
      - name: Checkout repository
        uses: actions/checkout@v4

      # üß∞ Step 2: Set up JDK for building Spring Boot app
      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # ‚öôÔ∏è Step 3: Build the Spring Boot JAR
      - name: Build with Maven
        working-directory: product-service
        run: mvn clean package -DskipTests

      # üê≥ Step 4: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # üèóÔ∏è Step 5: Build and tag Docker image
      - name: Build Docker image
        working-directory: backend/product-service
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/product-service:latest .

      # üöÄ Step 6: Push image to Docker Hub
      - name: Push to Docker Hub
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/product-service:latest

  # (Optional) Deploy step ‚Äî if you want automatic VPS deployment
  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: SSH to VPS and deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd /root/ecommerce/backend/product-service
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/product-service:latest
            docker-compose down
            docker-compose up -d

